plugins {
    id "fabric-loom"
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

repositories {
    maven { url "https://dl.bintray.com/shedaniel/shedaniel-mods" }
    maven { url 'https://jitpack.io' }
    mavenCentral()
}

loom {
    accessWidener = file("src/main/resources/ingameime.accessWidener")
}

configurations {
    shadow
}

dependencies {
    minecraft("com.mojang:minecraft:${rootProject.architect.minecraft}")
    mappings(minecraft.officialMojangMappings())
    modCompile("net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}")
    modCompile("net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}")
    modCompile("me.shedaniel:RoughlyEnoughItems:${project.roughlyenoughitems}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    //Kotlin
    modImplementation("net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}")
    //Cloth Api
    modImplementation("me.shedaniel.cloth.api:cloth-client-events-v0:${cloth_client_events_v0_version}")
    //Stain
    modImplementation("io.github.ladysnake:Satin:${satin_version}")
    //Common
    compile(project(":common")) {
        transitive = false
    }
    shadow(project(":common")) {
        transitive = false
    }
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
    inputs.property "version", project.version
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
}
