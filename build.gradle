plugins {
    id "fabric-loom" version "0.5-SNAPSHOT"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" version "1.4.21"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileKotlin.kotlinOptions.jvmTarget = "1.8"

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://dl.bintray.com/shedaniel/shedaniel-mods" }
    maven { url 'https://jitpack.io' }
    jcenter()
}

loom {
    accessWidener = file("src/main/resources/ingameime.accessWidener")
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.api_version}")

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    //Cloth Api
    modApi("me.shedaniel.cloth.api:cloth-client-events-v0:${cloth_client_events_v0_version}")
    include("me.shedaniel.cloth.api:cloth-client-events-v0:${cloth_client_events_v0_version}")
    //Stain
    modImplementation "io.github.ladysnake:Satin:${satin_version}"
    include "io.github.ladysnake:Satin:${satin_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
